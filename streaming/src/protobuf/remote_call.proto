syntax = "proto3";

package ray.streaming.proto;

option java_package = "org.ray.streaming.runtime.generated";

message PythonFunction {
    bytes function = 1;
    string module_name = 2;
    string class_name = 3;
    string function_name = 4;
    string function_interface = 5;
}

message PythonPartition {
    bytes partition = 1;
    string module_name = 2;
    string class_name = 3;
    string function_name = 4;
}

message ExecutionGraph {
    enum NodeType {
        SOURCE = 0;
        TRANSFORM = 1;
        SINK = 2;
    }

    message ExecutionNode {
        int32 node_id = 1;
        int32 parallelism = 2;
        NodeType node_type = 3;
        bytes stream_operator = 4;
        repeated ExecutionTask execution_tasks = 5;
        repeated ExecutionEdge inputs_edges = 6;
        repeated ExecutionEdge output_edges = 7;
    }

    message ExecutionEdge {
        int32 src_node_id = 1;
        int32 target_node_id = 2;
        bytes partition = 3;
    }

    message ExecutionTask {
        int32 task_id = 1;
        int32 task_index = 2;
        bytes worker_actor_id = 3;
    }

    uint64 build_time = 1;
    repeated ExecutionNode execution_nodes = 2;
}

message WorkerContext {
    string job_name = 1;
    int32 task_id = 2;
    map<string, string> conf = 3;
    bytes master_actor_id = 4;
    ExecutionGraph graph = 5;
}
